{
    "openapi": "3.0.0",
    "info": {
        "title": "Pet Care Platform API",
        "description": "API documentation for Pet Care Platform - connecting pet owners with reliable sitters",
        "contact": {
            "email": "admin@petcare.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "c7bb21a0d87049e161b8e4c9b0d909f2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "owner",
                                            "sitter"
                                        ],
                                        "example": "owner"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "owner"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|AbCdEf..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "409": {
                        "description": "Conflict - User with this email already exists"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "owner"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "2|XyZ123..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "df9bdc6c7a6d9f20b983526b2ec0f698",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "operationId": "015ae3b99f0678ec8fe0a02409751660",
                "responses": {
                    "200": {
                        "description": "Current user data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "owner"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Get list of favorites",
                "description": "Returns list of favorites with optional filtering",
                "operationId": "getFavoritesList",
                "parameters": [
                    {
                        "name": "owner_id",
                        "in": "query",
                        "description": "Filter by owner ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sitter_id",
                        "in": "query",
                        "description": "Filter by sitter ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorites retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Favorites retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Favorite"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Add sitter to favorites",
                "description": "Add a sitter to owner's favorites list",
                "operationId": "storeFavorite",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FavoriteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Favorite added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite added successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Favorite"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User role restrictions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User must have owner or both role to add favorites"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Sitter already in favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sitter is already in favorites"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "data": {
                                            "properties": {
                                                "sitter_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The sitter id and owner id must be different."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/{id}": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Get favorite information",
                "description": "Returns favorite data",
                "operationId": "getFavoriteById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Favorite id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Favorite"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Favorite not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Remove favorite",
                "description": "Remove a sitter from favorites",
                "operationId": "deleteFavorite",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Favorite id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorite removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Favorite not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/remove": {
            "delete": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Remove favorite by owner and sitter IDs",
                "description": "Remove a sitter from favorites using owner_id and sitter_id",
                "operationId": "removeFavoriteByIds",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "owner_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "sitter_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Favorite removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Favorite not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/owners/{owner_id}/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Get owner's favorite sitters",
                "description": "Returns list of favorite sitters for a specific owner",
                "operationId": "getOwnerFavorites",
                "parameters": [
                    {
                        "name": "owner_id",
                        "in": "path",
                        "description": "Owner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Owner favorites retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Favorite"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Owner not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorites/check": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Check if sitter is in owner's favorites",
                "description": "Check if a specific sitter is in owner's favorites list",
                "operationId": "checkFavoriteStatus",
                "parameters": [
                    {
                        "name": "owner_id",
                        "in": "query",
                        "description": "Owner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sitter_id",
                        "in": "query",
                        "description": "Sitter ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite status checked successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "is_favorite": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "favorite_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pets": {
            "get": {
                "tags": [
                    "Pets"
                ],
                "summary": "Get list of pets",
                "description": "Returns list of pets with optional filtering",
                "operationId": "getPetsList",
                "parameters": [
                    {
                        "name": "owner_id",
                        "in": "query",
                        "description": "Filter by owner ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "breed",
                        "in": "query",
                        "description": "Filter by breed",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pets retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pets retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Pet"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pets"
                ],
                "summary": "Create new pet",
                "description": "Create a new pet profile",
                "operationId": "storePet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pet created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pet created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Pet"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User role restrictions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User must have owner or both role to create pets"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pets/{id}": {
            "get": {
                "tags": [
                    "Pets"
                ],
                "summary": "Get pet information",
                "description": "Returns pet data",
                "operationId": "getPetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pet id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pet retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Pet"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pet not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Pets"
                ],
                "summary": "Update existing pet",
                "description": "Update pet data",
                "operationId": "updatePet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pet id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pet updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pet updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Pet"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pet not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "data": {
                                            "properties": {
                                                "weight": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The weight must be between 0.1 and 200."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Pets"
                ],
                "summary": "Delete pet",
                "description": "Delete a pet",
                "operationId": "deletePet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pet id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pet deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pet not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ratings": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get list of ratings (public)",
                "description": "Returns list of ratings with optional filtering - no authentication required",
                "operationId": "getRatingsList",
                "parameters": [
                    {
                        "name": "owner_id",
                        "in": "query",
                        "description": "Filter by owner ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sitter_id",
                        "in": "query",
                        "description": "Filter by sitter ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "score",
                        "in": "query",
                        "description": "Filter by score",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 5,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ratings retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Rating"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "404": {
                        "description": "Not Found - The requested resource was not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            },
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Create new rating",
                "description": "Create a new rating for a sitter",
                "operationId": "storeRating",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RatingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rating created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rating created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Rating"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - The requested resource was not found"
                    },
                    "409": {
                        "description": "Conflict - Rating already exists for this owner-sitter combination"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ratings/{id}": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get rating information (public)",
                "description": "Returns rating data - no authentication required",
                "operationId": "getRatingById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rating id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rating retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Rating"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "404": {
                        "description": "Not Found - Rating not found"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            },
            "put": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Update existing rating",
                "description": "Update rating data",
                "operationId": "updateRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rating id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RatingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rating updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rating updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Rating"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - Rating not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Delete rating",
                "description": "Delete a rating",
                "operationId": "deleteRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rating id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rating deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rating deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - Rating not found"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sitters/{sitter_id}/average-rating": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get sitter's average rating (public)",
                "description": "Returns average rating for a specific sitter - no authentication required",
                "operationId": "getSitterAverageRating",
                "parameters": [
                    {
                        "name": "sitter_id",
                        "in": "path",
                        "description": "Sitter ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Average rating retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "sitter_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "average_rating": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 4.5
                                                },
                                                "total_ratings": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "403": {
                        "description": "Forbidden - User is not a sitter"
                    },
                    "404": {
                        "description": "Not Found - Sitter not found"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            }
        },
        "/api/service-requests": {
            "get": {
                "tags": [
                    "Service Requests"
                ],
                "summary": "Get list of service requests",
                "description": "Returns list of service requests with optional filtering",
                "operationId": "getServiceRequestsList",
                "parameters": [
                    {
                        "name": "owner_id",
                        "in": "query",
                        "description": "Filter by owner ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sitter_id",
                        "in": "query",
                        "description": "Filter by sitter ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "accepted",
                                "rejected"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service requests retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service requests retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ServiceRequest"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Service Requests"
                ],
                "summary": "Create new service request",
                "description": "Create a new service request",
                "operationId": "storeServiceRequest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRequestRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServiceRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data or business logic error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pet must belong to the owner"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User role restrictions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User must have owner or both role to create service requests"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "data": {
                                            "properties": {
                                                "owner_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The owner id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-requests/{id}": {
            "get": {
                "tags": [
                    "Service Requests"
                ],
                "summary": "Get service request information",
                "description": "Returns service request data",
                "operationId": "getServiceRequestById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service request id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service request retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServiceRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Service Requests"
                ],
                "summary": "Update existing service request",
                "description": "Update service request data",
                "operationId": "updateServiceRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service request id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRequestRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service request updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServiceRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "data": {
                                            "properties": {
                                                "date_from": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The date from field must be a date after or equal to today."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Service Requests"
                ],
                "summary": "Delete service request",
                "description": "Delete a service request",
                "operationId": "deleteServiceRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service request id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service request deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-requests/{id}/accept": {
            "put": {
                "tags": [
                    "Service Requests"
                ],
                "summary": "Accept service request",
                "description": "Accept a service request (sitter action)",
                "operationId": "acceptServiceRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service request id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service request accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request accepted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServiceRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-requests/{id}/reject": {
            "put": {
                "tags": [
                    "Service Requests"
                ],
                "summary": "Reject service request",
                "description": "Reject a service request (sitter action)",
                "operationId": "rejectServiceRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service request id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service request rejected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request rejected successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServiceRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service request not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-types": {
            "get": {
                "tags": [
                    "Service Types"
                ],
                "summary": "Get all service types (public)",
                "description": "Returns list of all service types - no authentication required",
                "operationId": "getServiceTypesList",
                "responses": {
                    "200": {
                        "description": "List of service types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            },
            "post": {
                "tags": [
                    "Service Types"
                ],
                "summary": "Create a new service type",
                "operationId": "619a872ec958059458ba8347a26809f7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dog Walking"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Professional dog walking services"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-types/{id}": {
            "get": {
                "tags": [
                    "Service Types"
                ],
                "summary": "Get a specific service type (public)",
                "description": "Get specific service type details - no authentication required",
                "operationId": "34037d0d53b78ec040db3841ff44e929",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service type details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "404": {
                        "description": "Not Found - Service type not found"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            },
            "put": {
                "tags": [
                    "Service Types"
                ],
                "summary": "Update a service type",
                "operationId": "421a0caaf85f895edb68b8b4d6945b89",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dog Walking"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Professional dog walking services"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service type updated successfully"
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - Service type not found"
                    },
                    "409": {
                        "description": "Conflict - Service type with this name already exists"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Service Types"
                ],
                "summary": "Delete a service type",
                "operationId": "255c52515cf5b4a3bf8e31a079aca0b7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Service type deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - Service type not found"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sitter-profiles": {
            "get": {
                "tags": [
                    "Sitter Profiles"
                ],
                "summary": "Get list of sitter profiles (public)",
                "description": "Returns list of sitter profiles with optional filtering - no authentication required",
                "operationId": "getSitterProfilesList",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by user ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "min_rate",
                        "in": "query",
                        "description": "Minimum hourly rate",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "max_rate",
                        "in": "query",
                        "description": "Maximum hourly rate",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sitter profiles retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SitterProfile"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "404": {
                        "description": "Not Found - The requested resource was not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            },
            "post": {
                "tags": [
                    "Sitter Profiles"
                ],
                "summary": "Create new sitter profile",
                "description": "Create a new sitter profile",
                "operationId": "storeSitterProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SitterProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sitter profile created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sitter profile created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SitterProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - The requested resource was not found"
                    },
                    "409": {
                        "description": "Conflict - Sitter profile already exists for this user"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sitter-profiles/{id}": {
            "get": {
                "tags": [
                    "Sitter Profiles"
                ],
                "summary": "Get sitter profile information (public)",
                "description": "Returns sitter profile data - no authentication required",
                "operationId": "getSitterProfileById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sitter profile id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sitter profile retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SitterProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "404": {
                        "description": "Not Found - Sitter profile not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            },
            "put": {
                "tags": [
                    "Sitter Profiles"
                ],
                "summary": "Update existing sitter profile",
                "description": "Update sitter profile data",
                "operationId": "updateSitterProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sitter profile id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SitterProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sitter profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sitter profile updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SitterProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - Sitter profile not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sitter Profiles"
                ],
                "summary": "Delete sitter profile",
                "description": "Delete a sitter profile",
                "operationId": "deleteSitterProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sitter profile id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sitter profile deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sitter profile deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - Sitter profile not found"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user_id}/sitter-profile": {
            "get": {
                "tags": [
                    "Sitter Profiles"
                ],
                "summary": "Get sitter profile by user ID (public)",
                "description": "Returns sitter profile for a specific user - no authentication required",
                "operationId": "getSitterProfileByUserId",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sitter profile retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SitterProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "403": {
                        "description": "Forbidden - User is not a sitter"
                    },
                    "404": {
                        "description": "Not Found - User or sitter profile not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            }
        },
        "/api/sitter-profiles/search": {
            "get": {
                "tags": [
                    "Sitter Profiles"
                ],
                "summary": "Search sitter profiles by location (public)",
                "description": "Search for sitter profiles within a certain radius of given coordinates - no authentication required",
                "operationId": "searchSitterProfiles",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Search center latitude",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Search center longitude",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Search radius in kilometers (default: 10)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sitter profiles found successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SitterProfile"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "404": {
                        "description": "Not Found - The requested resource was not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            }
        },
        "/api/sitter-services": {
            "get": {
                "tags": [
                    "Sitter Services"
                ],
                "summary": "Get all sitter services (public)",
                "description": "Returns list of sitter services with optional filtering - no authentication required",
                "operationId": "getSitterServicesList",
                "parameters": [
                    {
                        "name": "service_type_id",
                        "in": "query",
                        "description": "Filter by service type ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sitter services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "hourly_rate": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "service_type_id": {
                                                "type": "integer"
                                            },
                                            "sitter_id": {
                                                "type": "integer"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "service_type": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "404": {
                        "description": "Not Found - The requested resource was not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            },
            "post": {
                "tags": [
                    "Sitter Services"
                ],
                "summary": "Create a new sitter service",
                "operationId": "d5eb8601dfee00d018433abe35eb47ea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "hourly_rate",
                                    "service_type_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dog Walking Service"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Professional dog walking services"
                                    },
                                    "hourly_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25
                                    },
                                    "service_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "sitter_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sitter service created successfully"
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - The requested resource was not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sitter-services/{id}": {
            "get": {
                "tags": [
                    "Sitter Services"
                ],
                "summary": "Get a specific sitter service (public)",
                "description": "Get specific sitter service details - no authentication required",
                "operationId": "e069b2e1db039df34a81837da028a1eb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sitter service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sitter service details"
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "404": {
                        "description": "Not Found - Sitter service not found"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            },
            "put": {
                "tags": [
                    "Sitter Services"
                ],
                "summary": "Update a sitter service",
                "operationId": "441d3554aec7019144d5e66bbbd56c3d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sitter service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "hourly_rate",
                                    "service_type_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dog Walking Service"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Professional dog walking services"
                                    },
                                    "hourly_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25
                                    },
                                    "service_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "sitter_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sitter service updated successfully"
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - Sitter service not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sitter Services"
                ],
                "summary": "Delete a sitter service",
                "operationId": "adf288631c77ad3c2e480b7ed4810f95",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sitter service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sitter service deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - Sitter service not found"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sitters": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of sitters (public)",
                "description": "Returns list of sitters with optional filtering - no authentication required",
                "operationId": "getSittersList",
                "parameters": [
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter by city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_type",
                        "in": "query",
                        "description": "Filter by service type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sitters retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "404": {
                        "description": "Not Found - The requested resource was not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users with optional filtering by role",
                "operationId": "getUsersList",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by user role",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "owner",
                                "sitter",
                                "both",
                                "admin"
                            ]
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter by city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - The requested resource was not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "description": "Create a new user account",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "409": {
                        "description": "Conflict - User with this email already exists"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - User not found"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user",
                "description": "Update user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - User not found"
                    },
                    "409": {
                        "description": "Conflict - User with this email already exists"
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation failed for the input data"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "description": "Delete a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters provided"
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    },
                    "403": {
                        "description": "Forbidden - You do not have access to this resource"
                    },
                    "404": {
                        "description": "Not Found - User not found"
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred on the server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "owner",
                            "sitter",
                            "both",
                            "admin"
                        ],
                        "example": "owner"
                    },
                    "avatar_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/avatar.jpg"
                    },
                    "address_line": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "city": {
                        "type": "string",
                        "example": "Amsterdam"
                    },
                    "postal_code": {
                        "type": "string",
                        "example": "1000AB"
                    },
                    "country": {
                        "type": "string",
                        "example": "Netherlands"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": 52.3676
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 4.9041
                    },
                    "is_admin": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UserRequest": {
                "title": "User Request",
                "description": "User request model",
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "owner",
                            "sitter",
                            "both",
                            "admin"
                        ],
                        "example": "owner"
                    },
                    "avatar_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/avatar.jpg"
                    },
                    "address_line": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "city": {
                        "type": "string",
                        "example": "Amsterdam"
                    },
                    "postal_code": {
                        "type": "string",
                        "example": "1000AB"
                    },
                    "country": {
                        "type": "string",
                        "example": "Netherlands"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": 52.3676
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 4.9041
                    }
                },
                "type": "object"
            },
            "Pet": {
                "title": "Pet",
                "description": "Pet model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Buddy"
                    },
                    "breed": {
                        "type": "string",
                        "example": "Golden Retriever"
                    },
                    "age": {
                        "type": "integer",
                        "example": 3
                    },
                    "weight": {
                        "type": "number",
                        "format": "float",
                        "example": 25.5
                    },
                    "photo_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/pet.jpg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "PetRequest": {
                "title": "Pet Request",
                "description": "Pet request model",
                "required": [
                    "owner_id",
                    "name",
                    "breed",
                    "age",
                    "weight"
                ],
                "properties": {
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Buddy"
                    },
                    "breed": {
                        "type": "string",
                        "example": "Golden Retriever"
                    },
                    "age": {
                        "type": "integer",
                        "example": 3
                    },
                    "weight": {
                        "type": "number",
                        "format": "float",
                        "example": 25.5
                    },
                    "photo_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/pet.jpg"
                    }
                },
                "type": "object"
            },
            "ServiceRequest": {
                "title": "Service Request",
                "description": "Service Request model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "sitter_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "pet_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "date_from": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "date_to": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-20"
                    },
                    "message": {
                        "type": "string",
                        "example": "Please take care of my dog while I'm away"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "accepted",
                            "rejected"
                        ],
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "sitter": {
                        "$ref": "#/components/schemas/User"
                    },
                    "pet": {
                        "$ref": "#/components/schemas/Pet"
                    }
                },
                "type": "object"
            },
            "ServiceRequestRequest": {
                "title": "Service Request Request",
                "description": "Service Request request model",
                "required": [
                    "owner_id",
                    "sitter_id",
                    "pet_id",
                    "date_from",
                    "date_to"
                ],
                "properties": {
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "sitter_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "pet_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "date_from": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "date_to": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-20"
                    },
                    "message": {
                        "type": "string",
                        "example": "Please take care of my dog while I'm away"
                    }
                },
                "type": "object"
            },
            "Rating": {
                "title": "Rating",
                "description": "Rating model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "sitter_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "score": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 5
                    },
                    "comment": {
                        "type": "string",
                        "example": "Excellent service! My dog was very happy."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "sitter": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "RatingRequest": {
                "title": "Rating Request",
                "description": "Rating request model",
                "required": [
                    "owner_id",
                    "sitter_id",
                    "score"
                ],
                "properties": {
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "sitter_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "score": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 5
                    },
                    "comment": {
                        "type": "string",
                        "example": "Excellent service! My dog was very happy."
                    }
                },
                "type": "object"
            },
            "Favorite": {
                "title": "Favorite",
                "description": "Favorite model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "sitter_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "sitter": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "FavoriteRequest": {
                "title": "Favorite Request",
                "description": "Favorite request model",
                "required": [
                    "owner_id",
                    "sitter_id"
                ],
                "properties": {
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "sitter_id": {
                        "type": "integer",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "SitterProfile": {
                "title": "Sitter Profile",
                "description": "Sitter Profile model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "bio": {
                        "type": "string",
                        "example": "Experienced pet sitter with 5 years of experience. Love all animals!"
                    },
                    "default_hourly_rate": {
                        "type": "number",
                        "format": "float",
                        "example": 25.5
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": 52.3676
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 4.9041
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "SitterProfileRequest": {
                "title": "Sitter Profile Request",
                "description": "Sitter Profile request model",
                "required": [
                    "user_id",
                    "default_hourly_rate"
                ],
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "bio": {
                        "type": "string",
                        "example": "Experienced pet sitter with 5 years of experience. Love all animals!"
                    },
                    "default_hourly_rate": {
                        "type": "number",
                        "format": "float",
                        "example": 25.5
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": 52.3676
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 4.9041
                    }
                },
                "type": "object"
            },
            "ServiceType": {
                "title": "Service Type",
                "description": "Service Type model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Dog Walking"
                    },
                    "description": {
                        "type": "string",
                        "example": "Professional dog walking service"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ServiceTypeRequest": {
                "title": "Service Type Request",
                "description": "Service Type request model",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Dog Walking"
                    },
                    "description": {
                        "type": "string",
                        "example": "Professional dog walking service"
                    }
                },
                "type": "object"
            },
            "SitterService": {
                "title": "Sitter Service",
                "description": "Sitter Service model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "sitter_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "service_type_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "hourly_rate": {
                        "type": "number",
                        "format": "float",
                        "example": 25.5
                    },
                    "description": {
                        "type": "string",
                        "example": "I provide excellent dog walking services"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sitter": {
                        "$ref": "#/components/schemas/User"
                    },
                    "serviceType": {
                        "$ref": "#/components/schemas/ServiceType"
                    }
                },
                "type": "object"
            },
            "SitterServiceRequest": {
                "title": "Sitter Service Request",
                "description": "Sitter Service request model",
                "required": [
                    "sitter_id",
                    "service_type_id",
                    "hourly_rate"
                ],
                "properties": {
                    "sitter_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "service_type_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "hourly_rate": {
                        "type": "number",
                        "format": "float",
                        "example": 25.5
                    },
                    "description": {
                        "type": "string",
                        "example": "I provide excellent dog walking services"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your bearer token in the format: Bearer {token}",
                "scheme": "bearer"
            },
            "0": []
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API endpoints for user authentication"
        },
        {
            "name": "Service Types",
            "description": "API Endpoints for managing service types"
        },
        {
            "name": "Sitter Services",
            "description": "API Endpoints for managing sitter services"
        },
        {
            "name": "Favorites",
            "description": "Favorites"
        },
        {
            "name": "Pets",
            "description": "Pets"
        },
        {
            "name": "Ratings",
            "description": "Ratings"
        },
        {
            "name": "Service Requests",
            "description": "Service Requests"
        },
        {
            "name": "Sitter Profiles",
            "description": "Sitter Profiles"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}